{"ast":null,"code":"import axios from 'axios'; // ACTION TYPES;\n\nconst FETCH_RECEIPT_DATA = \"FETCH_RECEIPT_DATA\";\nconst RESET_RECEIPT_DATA = \"RESET_RECEIPT_DATA\"; // ACTION CREATOR;\n\nconst fetchReceiptData = receiptdata => {\n  return {\n    type: FETCH_RECEIPT_DATA,\n    payload: receiptdata\n  };\n};\n\nconst resetReceiptData = () => {\n  return {\n    type: RESET_RECEIPT_DATA,\n    payload: {}\n  };\n}; // Thunks go here!\n\n\nexport const fetchReceiptDataThunk = selectedFile => dispatch => {\n  const data = new FormData();\n  data.append('file', selectedFile);\n  axios.post(\"https://api.taggun.io/api/receipt/v1/verbose/file\", data, {\n    // receive two parameter endpoint url ,form data \n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n      \"Accept\": \"application/json\",\n      \"apikey\": \"e6d1b110bdf511e98bfadfb7eb1aa8b5\"\n    }\n  }).then(res => {\n    // then print response status\n    dispatch(fetchReceiptData(res.data));\n    console.log(res.data);\n  });\n};\nexport const resetReceiptDataThunk = () => dispatch => {\n  let resolvedActionObject = resetReceiptData();\n  dispatch(resolvedActionObject);\n}; // REDUCER FUNCTION;\n\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case FETCH_RECEIPT_DATA:\n      return action.payload;\n\n    case RESET_RECEIPT_DATA:\n      return action.payload;\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/admin/Desktop/vpaynew/client/src/store/utilities/receiptdata.js"],"names":["axios","FETCH_RECEIPT_DATA","RESET_RECEIPT_DATA","fetchReceiptData","receiptdata","type","payload","resetReceiptData","fetchReceiptDataThunk","selectedFile","dispatch","data","FormData","append","post","headers","then","res","console","log","resetReceiptDataThunk","resolvedActionObject","state","action"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;AACA,MAAMC,kBAAkB,GAAG,oBAA3B,C,CAEA;;AACA,MAAMC,gBAAgB,GAAIC,WAAD,IAAiB;AACtC,SAAO;AACHC,IAAAA,IAAI,EAAEJ,kBADH;AAEHK,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALD;;AAOA,MAAMG,gBAAgB,GAAG,MAAM;AAC7B,SAAO;AACLF,IAAAA,IAAI,EAAEH,kBADD;AAELI,IAAAA,OAAO,EAAE;AAFJ,GAAP;AAID,CALD,C,CAOA;;;AACA,OAAO,MAAME,qBAAqB,GAAIC,YAAD,IAAmBC,QAAD,IAAc;AACjE,QAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,EAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBJ,YAApB;AAEAT,EAAAA,KAAK,CAACc,IAAN,CAAW,mDAAX,EAAgEH,IAAhE,EAAsE;AAAE;AACtEI,IAAAA,OAAO,EAAE;AACP,sBAAgB,qBADT;AAEP,gBAAU,kBAFH;AAGP,gBAAU;AAHH;AAD2D,GAAtE,EAODC,IAPC,CAOIC,GAAG,IAAI;AAAE;AACbP,IAAAA,QAAQ,CAACP,gBAAgB,CAACc,GAAG,CAACN,IAAL,CAAjB,CAAR;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACN,IAAhB;AACD,GAVC;AAWH,CAfM;AAiBP,OAAO,MAAMS,qBAAqB,GAAG,MAAOV,QAAD,IAAc;AACvD,MAAIW,oBAAoB,GAAGd,gBAAgB,EAA3C;AACAG,EAAAA,QAAQ,CAACW,oBAAD,CAAR;AACD,CAHM,C,CAKP;;AACA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACnC,UAAQA,MAAM,CAAClB,IAAf;AACI,SAAKJ,kBAAL;AACI,aAAOsB,MAAM,CAACjB,OAAd;;AACJ,SAAKJ,kBAAL;AACI,aAAOqB,MAAM,CAACjB,OAAd;;AACJ;AACI,aAAOgB,KAAP;AANR;AAQH,CATD","sourcesContent":["import axios from 'axios';\n// ACTION TYPES;\nconst FETCH_RECEIPT_DATA = \"FETCH_RECEIPT_DATA\";\nconst RESET_RECEIPT_DATA = \"RESET_RECEIPT_DATA\";\n\n// ACTION CREATOR;\nconst fetchReceiptData = (receiptdata) => {\n    return {\n        type: FETCH_RECEIPT_DATA,\n        payload: receiptdata\n    }\n}\n\nconst resetReceiptData = () => {\n  return {\n    type: RESET_RECEIPT_DATA,\n    payload: {}\n  }\n}\n\n// Thunks go here!\nexport const fetchReceiptDataThunk = (selectedFile) => (dispatch) => {\n    const data = new FormData() \n    data.append('file', selectedFile)\n\n    axios.post(\"https://api.taggun.io/api/receipt/v1/verbose/file\", data, { // receive two parameter endpoint url ,form data \n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"Accept\": \"application/json\",\n        \"apikey\": \"e6d1b110bdf511e98bfadfb7eb1aa8b5\"\n      }\n    })\n  .then(res => { // then print response status\n    dispatch(fetchReceiptData(res.data));\n    console.log(res.data);\n  })\n}\n\nexport const resetReceiptDataThunk = () => (dispatch) => {\n  let resolvedActionObject = resetReceiptData(); \n  dispatch(resolvedActionObject);\n}\n\n// REDUCER FUNCTION;\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case FETCH_RECEIPT_DATA:\n            return action.payload;\n        case RESET_RECEIPT_DATA:\n            return action.payload;\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}