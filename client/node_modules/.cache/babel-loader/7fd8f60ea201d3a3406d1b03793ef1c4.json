{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/vpaynew/client/src/RoutesView.jsx\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Redirect, BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { registerUserThunk } from \"./store/utilities/users\";\nimport { logInThunk, logOutThunk, me } from \"./store/utilities/loggeduser\";\nimport { fetchReceiptDataThunk, resetReceiptDataThunk } from \"./store/utilities/receiptdata\";\nimport { fetchOrdersDataThunk, resetOrdersDataThunk } from \"./store/utilities/orders\"; //PAGE IMPORTS\n\nimport HomePage from './components/HomePage';\nimport LoginPage from './components/LoginPage';\nimport RegisterPage from './components/RegisterPage';\nimport AssignOrders from './components/AssignOrders';\nimport AccessDenied from './components/AccessDenied';\n\nclass RoutesView extends Component {\n  componentDidMount() {\n    this.props.me();\n  } // addStudent = (student) => {\n  //   this.props.addStudent(student);\n  // }\n\n\n  render() {\n    const isLoggedIn = this.props.isLoggedIn;\n    console.log('RENDERING');\n\n    const HomeComponent = () => React.createElement(HomePage, {\n      orders: this.props.orders,\n      me: this.props.me,\n      logOut: this.props.logOut,\n      loggeduser: this.props.loggeduser,\n      fetchReceiptData: this.props.fetchReceiptData,\n      resetReceiptData: this.props.resetReceiptData,\n      fetchOrdersData: this.props.fetchOrdersData,\n      resetOrdersData: this.props.resetOrdersData,\n      data: this.props.receiptdata,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    });\n\n    const LoginComponent = () => React.createElement(LoginPage, {\n      logIn: this.props.logIn,\n      isLoggedIn: this.props.isLoggedIn,\n      error: this.props.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n\n    const RegisterComponent = () => React.createElement(RegisterPage, {\n      users: this.props.users,\n      registerUser: this.props.registerUser,\n      registerError: this.props.registerError,\n      registerSuccess: this.props.registerSuccess,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    });\n\n    const AssignOrdersComponent = () => React.createElement(AssignOrders, {\n      loggeduser: this.props.loggeduser,\n      resetReceiptData: this.props.resetReceiptData,\n      data: this.props.receiptdata,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n\n    const DeniedComponent = () => React.createElement(AccessDenied, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }); // const AllCampusesComponent = () => (<AllCampuses students={this.props.students} campuses={this.props.campuses} removeCampus={this.removeCampus} addCampus={this.addCampus} grabCampus={this.grabCampus}/>);\n\n\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: LoginComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: LoginComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/register\",\n      render: RegisterComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), isLoggedIn && React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/home\",\n      render: HomeComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/orders\",\n      render: AssignOrdersComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(Route, {\n      component: DeniedComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    users: state.users,\n    loggeduser: state.loggeduser,\n    error: state.loggeduser.response,\n    receiptdata: state.receiptdata,\n    registerSuccess: state.users.success,\n    registerError: state.users.response,\n    isLoggedIn: !!state.loggeduser.id,\n    orders: state.orders\n  };\n};\n\nconst mapDispatch = dispatch => {\n  return {\n    registerUser: user => dispatch(registerUserThunk(user)),\n    logIn: user => dispatch(logInThunk(user)),\n    logOut: () => dispatch(logOutThunk()),\n    fetchReceiptData: filename => dispatch(fetchReceiptDataThunk(filename)),\n    resetReceiptData: () => dispatch(resetReceiptDataThunk()),\n    me: () => dispatch(me()),\n    fetchOrdersData: orders => dispatch(fetchOrdersDataThunk(orders)),\n    resetOrdersData: () => dispatch(resetOrdersDataThunk())\n  };\n};\n\nexport default connect(mapState, mapDispatch)(RoutesView);","map":{"version":3,"sources":["/Users/admin/Desktop/vpaynew/client/src/RoutesView.jsx"],"names":["React","Component","Redirect","BrowserRouter","Router","Route","Switch","connect","registerUserThunk","logInThunk","logOutThunk","me","fetchReceiptDataThunk","resetReceiptDataThunk","fetchOrdersDataThunk","resetOrdersDataThunk","HomePage","LoginPage","RegisterPage","AssignOrders","AccessDenied","RoutesView","componentDidMount","props","render","isLoggedIn","console","log","HomeComponent","orders","logOut","loggeduser","fetchReceiptData","resetReceiptData","fetchOrdersData","resetOrdersData","receiptdata","LoginComponent","logIn","error","RegisterComponent","users","registerUser","registerError","registerSuccess","AssignOrdersComponent","DeniedComponent","mapState","state","response","success","id","mapDispatch","dispatch","user","filename"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { Redirect, BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {registerUserThunk} from \"./store/utilities/users\";\nimport {logInThunk, logOutThunk, me} from \"./store/utilities/loggeduser\";\nimport {fetchReceiptDataThunk, resetReceiptDataThunk} from \"./store/utilities/receiptdata\";\nimport {fetchOrdersDataThunk, resetOrdersDataThunk} from \"./store/utilities/orders\";\n\n//PAGE IMPORTS\nimport HomePage from './components/HomePage';\nimport LoginPage from './components/LoginPage';\nimport RegisterPage from './components/RegisterPage';\nimport AssignOrders from './components/AssignOrders';\nimport AccessDenied from './components/AccessDenied';\n\nclass RoutesView extends Component {\n\n  componentDidMount() {\n    this.props.me();\n  }\n\n  // addStudent = (student) => {\n  //   this.props.addStudent(student);\n  // }\n\n  render() {\n    const { isLoggedIn } = this.props;\n    console.log('RENDERING')\n    const HomeComponent = () => (<HomePage orders={this.props.orders} me={this.props.me} logOut={this.props.logOut} loggeduser={this.props.loggeduser} fetchReceiptData={this.props.fetchReceiptData} resetReceiptData={this.props.resetReceiptData} fetchOrdersData={this.props.fetchOrdersData} resetOrdersData={this.props.resetOrdersData} data={this.props.receiptdata}/>);\n    const LoginComponent = () => (<LoginPage logIn={this.props.logIn} isLoggedIn={this.props.isLoggedIn} error={this.props.error}/>);\n    const RegisterComponent = () => (<RegisterPage users={this.props.users} registerUser={this.props.registerUser} registerError={this.props.registerError} registerSuccess={this.props.registerSuccess}/>);\n    const AssignOrdersComponent = () => (<AssignOrders loggeduser={this.props.loggeduser} resetReceiptData={this.props.resetReceiptData} data={this.props.receiptdata}/>);\n    const DeniedComponent = () => (<AccessDenied />)\n    // const AllCampusesComponent = () => (<AllCampuses students={this.props.students} campuses={this.props.campuses} removeCampus={this.removeCampus} addCampus={this.addCampus} grabCampus={this.grabCampus}/>);\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" render={LoginComponent} />\n          <Route exact path=\"/login\" render={LoginComponent} />\n          <Route exact path=\"/register\" render={RegisterComponent} />\n          {isLoggedIn && (\n          <Switch>\n            <Route exact path=\"/home\" render={HomeComponent} />\n            <Route exact path=\"/orders\" render={AssignOrdersComponent} />\n          </Switch>\n          )}\n          <Route component={DeniedComponent} />\n          {/* <Route exact path=\"/allcampuses\" render={AllCampusesComponent}/> */}\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    users: state.users,\n    loggeduser: state.loggeduser,\n    error: state.loggeduser.response,\n    receiptdata: state.receiptdata,\n    registerSuccess: state.users.success,\n    registerError: state.users.response,\n    isLoggedIn: !!state.loggeduser.id,\n    orders: state.orders\n  }\n}\n\nconst mapDispatch = (dispatch) => {\n  return {\n    registerUser: (user) => dispatch(registerUserThunk(user)),\n    logIn: (user) => dispatch(logInThunk(user)),\n    logOut: () => dispatch(logOutThunk()),\n    fetchReceiptData: (filename) => dispatch(fetchReceiptDataThunk(filename)),\n    resetReceiptData: () => dispatch(resetReceiptDataThunk()),\n    me: () => dispatch(me()),\n    fetchOrdersData: (orders) => dispatch(fetchOrdersDataThunk(orders)),\n    resetOrdersData: () => dispatch(resetOrdersDataThunk())\n  }\n}\nexport default connect(mapState, mapDispatch)(RoutesView);"]},"metadata":{},"sourceType":"module"}