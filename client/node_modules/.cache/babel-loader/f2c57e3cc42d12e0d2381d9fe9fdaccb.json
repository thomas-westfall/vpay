{"ast":null,"code":"import _defineProperty from \"/Users/admin/Desktop/vpaynew/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/admin/Desktop/vpaynew/client/src/components/AssignOrders.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport axios from 'axios'; // import { Alert } from 'reactstrap';\n// import { UncontrolledAlert } from 'reactstrap';\n\nimport './AssignOrders.css';\n\nclass AssignOrders extends Component {\n  // state = {\n  //   orders: [\n  //       // {name:\"Learn Angular\",category:\"wip\", bgcolor: \"yellow\"},\n  //       // {name:\"React\", category:\"wip\", bgcolor:\"pink\"},\n  //       // {name:\"Vue\", category:\"complete\", bgcolor:\"skyblue\"}\n  //     ]\n  // }\n  constructor(props) {\n    super(props);\n\n    this.onDragOver = e => {\n      e.preventDefault();\n    };\n\n    this.onDragStart = (ev, id) => {\n      console.log('dragstart: ', id);\n      ev.dataTransfer.setData(\"id\", id);\n    };\n\n    this.onDrop = (ev, cat) => {\n      let id = ev.dataTransfer.getData(\"id\");\n      console.log(id, \"look jjjjjj\");\n      let orders = this.state.orders.filter(order => {\n        console.log(order.orderid, id, \"look\");\n\n        if (parseInt(order.orderid) === parseInt(id)) {\n          order.category = cat;\n        }\n\n        return order;\n      });\n      this.setState(_objectSpread({}, this.state, {\n        orders\n      }));\n    };\n\n    this.handleConfirm = event => {\n      console.log(\"RUNNNNNING\");\n      this.setState({\n        confirm: true\n      });\n    };\n\n    this.handleCancel = event => {\n      this.setState({\n        confirm: false\n      });\n    };\n\n    this.handleSubmit = async event => {\n      await axios.get(\"https://vpay-backend-auth.herokuapp.com/api/users/\".concat(this.state.username)).then(res => {\n        console.log(res.data, \"HERERERE\");\n        let newGroup = this.state.groups;\n        newGroup[res.data.username] = {\n          name: res.data.username + \"'s Orders\",\n          id: res.data.id,\n          theirOrders: [],\n          totalCost: 0\n        };\n        this.setState({\n          groups: newGroup,\n          currentuser: res.data,\n          errortext: \"\"\n        });\n      }).catch(err => {\n        if (err.response.status === 404) {\n          this.setState({\n            errortext: \"User not found! Did you spell it correctly?\"\n          });\n        }\n      });\n    };\n\n    this.handleFinalize = async event => {\n      await axios.post(\"https://vpay-backend-auth.herokuapp.com/api/receipts\", {\n        userId: this.props.loggeduser.id,\n        totalPrice: parseInt(((this.state.totalReceiptCost - this.state.totalReceiptTax) * (this.state.tipPercent / 100) + this.state.totalReceiptCost).toFixed(2)),\n        tipPercent: parseInt(this.state.tipPercent)\n      }).then(res => {\n        console.log(res);\n        let newReceiptId = res.data;\n        Object.keys(this.state.groups).map((keyName, i) => {\n          if (this.state.groups[keyName].id === this.props.loggeduser.id) {\n            this.state.groups[keyName].theirOrders.map(async eachOrder => {\n              console.log(\"userId\", this.state.groups[keyName].id, \"receiptId\", newReceiptId, \"paid\", true, \"itemName\", eachOrder.props.id, \"price \", eachOrder.props.cost * (this.state.tipPercent / 100) + eachOrder.props.cost + eachOrder.props.cost * (this.state.totalReceiptTax / (this.state.totalReceiptCost - this.state.totalReceiptTax)));\n              await axios.post(\"https://vpay-backend-auth.herokuapp.com/api/orders\", {\n                userId: this.state.groups[keyName].id,\n                receiptId: newReceiptId,\n                paid: true,\n                itemName: eachOrder.props.id,\n                price: parseFloat((eachOrder.props.cost * (this.state.tipPercent / 100) + eachOrder.props.cost + eachOrder.props.cost * (this.state.totalReceiptTax / (this.state.totalReceiptCost - this.state.totalReceiptTax))).toFixed(2))\n              }).then(response => {\n                console.log(response, \"WENT THROUGH SUCCESFULLLLLLLY\");\n              }).catch(error => {\n                console.log(error.response);\n              });\n            });\n          } else if (this.state.groups[keyName].id) {\n            this.state.groups[keyName].theirOrders.map(async eachOrder => await axios.post(\"https://vpay-backend-auth.herokuapp.com/api/orders\", {\n              userId: this.state.groups[keyName].id,\n              receiptId: newReceiptId,\n              paid: false,\n              itemName: eachOrder.props.id,\n              price: parseFloat((eachOrder.props.cost * (this.state.tipPercent / 100) + eachOrder.props.cost + eachOrder.props.cost * (this.state.totalReceiptTax / (this.state.totalReceiptCost - this.state.totalReceiptTax))).toFixed(2))\n            }).then(response => {\n              console.log(response);\n            }).catch(error => {\n              console.log(error.response);\n            }));\n          }\n        });\n      }).catch(err => {\n        console.log(err.response);\n      });\n\n      if (this.state.confirm) {\n        this.props.history.push(\"/home\");\n      }\n    };\n\n    this.handleChangeUsername = event => {\n      this.setState({\n        username: event.target.value\n      });\n    };\n\n    this.handleChangeTip = event => {\n      this.setState({\n        tipPercentChange: event.target.value\n      });\n    };\n\n    this.handleTip = event => {\n      event.preventDefault();\n      this.setState({\n        tipPercent: this.state.tipPercentChange\n      });\n    };\n\n    this.state = {\n      orders: [],\n      groups: {\n        allorders: {\n          name: \"All Orders\",\n          theirOrders: []\n        },\n        trash: {\n          name: \"Trash\",\n          theirOrders: []\n        }\n      },\n      totalReceiptCost: 0,\n      totalReceiptTax: 0,\n      username: \"\",\n      errortext: \"\",\n      numberOrders: 0,\n      tipPercentChange: 0,\n      tipPercent: 0,\n      confirm: false\n    };\n  }\n\n  parse(text, freq, cost) {\n    console.log(text, \"The order has a frequency of\", freq);\n    let newcost = cost / freq;\n    let step = 0;\n    let neworders = this.state.orders;\n\n    while (step < freq) {\n      console.log(\"THE FREQUENCY IS: \", freq, \" THE STEP IS: \", step);\n      neworders.push({\n        name: text,\n        category: \"allorders\",\n        cost: newcost,\n        orderid: this.state.numberOrders\n      });\n      this.state.numberOrders = this.state.numberOrders + 1;\n      step = step + 1;\n      console.log(\"THE FREQUENCY IS: \", freq, \" THE STEP BECAME: \", step);\n    }\n\n    this.setState(neworders);\n  }\n\n  async componentDidMount() {\n    if (this.props.data.totalAmount) {\n      this.setState({\n        totalReceiptCost: this.props.data.totalAmount.data,\n        totalReceiptTax: this.props.data.taxAmount.data\n      });\n    }\n\n    var newGroup = this.state.groups;\n    newGroup[this.props.loggeduser.username] = {\n      name: this.props.loggeduser.username + \"'s Orders\",\n      id: this.props.loggeduser.id,\n      theirOrders: [],\n      totalCost: 0\n    };\n    this.setState({\n      groups: newGroup\n    });\n\n    if (this.props.data.amounts) {\n      await this.props.data.amounts.map(order => {\n        console.log(order);\n\n        if (order.text[0] <= '9' && order.text[0] >= '0') {\n          let step = 1;\n\n          while (order.text[step] <= '9' && order.text[step] >= '0') {\n            step++;\n          }\n\n          let freq = order.text.substring(0, step);\n          console.log(freq, \"NEAT!\");\n          let freqint = parseInt(freq, 10);\n          this.parse(order.text.substring(step, order.text.length - 1), freqint, order.data);\n        } else {\n          this.parse(order.text, 1, order.data);\n        }\n      });\n    }\n  }\n\n  render() {\n    Object.keys(this.state.groups).map((keyName, i) => {\n      var emptyOrders = [];\n      this.state.groups[keyName].theirOrders = emptyOrders;\n\n      if (this.state.groups[keyName].totalCost !== undefined) {\n        this.state.groups[keyName].totalCost = 0;\n      }\n    });\n    this.state.orders.map(t => {\n      //console.log(t, \"THIS IS WHY REACT IS REACT\")\n      if (this.state.groups[t.category].totalCost !== undefined) {\n        this.state.groups[t.category].totalCost += t.cost; //console.log(typeof this.state.groups[t.category].totalCost, \"AWOIDHAWOIDHAOIWDH\")\n      }\n\n      this.state.groups[t.category].theirOrders.push(React.createElement(\"div\", {\n        key: t.orderid,\n        id: t.name,\n        cost: t.cost,\n        onDragStart: e => this.onDragStart(e, t.orderid),\n        draggable: true,\n        className: \"draggable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"itemRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"itemName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, t.name), React.createElement(\"td\", {\n        className: \"itemCost\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"$\", t.cost))))));\n    });\n    return (// <div className=\"container-drag\">\n      //   <nav className=\"navbar navbar-fixed-top\">\n      //     <h1 className=\"header\">Rearrange Your Orders</h1>\n      // <button  className=\"finalize\" onClick={this.handleFinalize}>Finalize</button> \n      // <Link className=\"btn btn-danger\" to=\"/home\">Cancel</Link>\n      //   </nav>\n      // <table className=\"topPageTable\">\n      //   <thead >\n      //     <tr className=\"receiptHead\">\n      //       <td className=\"headText\">Total Cost: {this.state.totalReceiptCost} +(${this.state.totalReceiptCost*((this.state.tipPercent)/100)} Tips)</td>\n      //       <td className=\"headText\">Current Tip Percent: {this.state.tipPercent}% </td>\n      //     </tr>\n      //   </thead>\n      //   </table>\n      //     <table>\n      //     <tbody>\n      //       <tr>\n      //         <td className=\"leftBlock\">\n      // <tr >\n      //   <td className=\"firstField\"><label htmlFor=\"Username\">Add User: </label></td><td className=\"firstField\"><input type=\"text\" className=\"Username\" onChange={this.handleChangeUsername} /></td><td className=\"firstField\"><button onClick={this.handleSubmit}>Add</button></td>\n      // </tr>\n      // <tr>\n      //     <td colSpan={3}>{this.state.errortext}</td>\n      // </tr>\n      // <tr>\n      //   <td className=\"firstField\"><label htmlFor=\"Username\">Tip Percent: </label></td><td className=\"firstField\"><input type=\"number\" className=\"Username\" onChange={this.handleChangeTip} /></td><td className=\"firstField\"><button onClick={this.handleTip}>Set</button> </td>\n      // </tr>\n      //           <tr>\n      //             <td className=\"leftBot\"></td>\n      //           </tr>\n      //         </td>\n      //         <td>\n      //         <div className=\"allTables\">\n      //           {Object.keys(this.state.groups).map((keyName, i) => (\n      //             <div>\n      //               {/* {console.log(\"INDEX: \",i, \" GROUP NAME: \",this.state.groups[keyName], \"WHATEVER KEY NAME IS: \",keyName)} */}\n      //               <table className=\"droppable\" onDragOver={(e) => this.onDragOver(e)} onDrop={(e) => this.onDrop(e, keyName)}>\n      //                 <thead>\n      //                   <tr><td><h1 className=\"groupName\">{this.state.groups[keyName].name}</h1></td></tr>\n      //                 </thead>\n      //                 <tbody>\n      //                   <tr></tr>\n      //                   {this.state.groups[keyName].theirOrders ?\n      //                     this.state.groups[keyName].theirOrders.map((eachOrder) => (\n      //                       <tr>\n      //                         <td>\n      //                           {eachOrder}\n      //                         </td>\n      //                       </tr>\n      //                     )\n      //                     )\n      //                     :\n      //                     \"\"\n      //                   }\n      //                   {/* {console.log(this.state.groups[keyName].totalCost,\" TOTAL COST SHOULD COME\")} */}\n      //                   {this.state.groups[keyName].totalCost !== undefined ? (\n      //                     <tr className=\"totalBar\">\n      //                       <td>\n      //                         Total: ${(this.state.groups[keyName].totalCost + ((this.state.groups[keyName].totalCost.toFixed(2) / (this.state.totalReceiptCost - this.state.totalReceiptTax)) * (this.state.totalReceiptTax))).toFixed(2)} (Tax: ${((this.state.groups[keyName].totalCost.toFixed(2) / (this.state.totalReceiptCost - this.state.totalReceiptTax)) * (this.state.totalReceiptTax)).toFixed(2)})\n      //                 <br></br>\n      //                         Total Tip: ${(this.state.groups[keyName].totalCost * (this.state.tipPercent / 100)).toFixed(2)}\n      //                       </td>\n      //                     </tr>\n      //                   )\n      //                     :\n      //                     \"\"\n      //                   }\n      //                 </tbody>\n      //               </table>\n      //             </div>\n      //           )\n      //           )}\n      //         </div>\n      //       </td>\n      //     </tr>\n      //   </tbody>\n      // </table>\n      //   <div>\n      //   </div>\n      // </div>\n      React.createElement(\"div\", {\n        className: \"mainPage \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-fixed-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, \"Rearrange Your Orders\"), React.createElement(\"div\", {\n        className: \"ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, this.state.confirm ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, \"Are you sure you want to finalize these orders? \", React.createElement(\"button\", {\n        className: \"final\",\n        onClick: this.handleFinalize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, \"Yes\"), React.createElement(\"button\", {\n        className: \"finalno\",\n        onClick: this.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, \"No\")) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"finalize btn btn-danger\",\n        onClick: this.handleConfirm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, \"Finalize\"), React.createElement(Link, {\n        className: \"btn btn-danger\",\n        to: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, \"Cancel\")))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"topPageTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        className: \"receiptHead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"headText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, \"Total Cost: \", this.state.totalReceiptCost, \" +($\", (this.state.totalReceiptCost * (this.state.tipPercent / 100)).toFixed(2), \" Tips)\"), React.createElement(\"td\", {\n        className: \"headText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, \"Current Tip Percent: \", this.state.tipPercent, \"% \"))))), React.createElement(\"div\", {\n        className: \"botLeftCon d-flex flex-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"botLeftFunc d-flex flex-fill flex-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"align-self-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"firstField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, \"Add User: \")), React.createElement(\"td\", {\n        className: \"firstField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"Username\",\n        onChange: this.handleChangeUsername,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        className: \"firstField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, \"Add\"))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, this.state.errortext)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"firstField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, \"Tip Percent: \")), React.createElement(\"td\", {\n        className: \"firstField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        className: \"Username\",\n        onChange: this.handleChangeTip,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        className: \"firstField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.handleTip,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, \"Set\"), \" \")))), React.createElement(\"div\", {\n        className: \"d-flex flex-fill flex-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"allTables flex-row d-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, Object.keys(this.state.groups).map((keyName, i) => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"droppable\",\n        onDragOver: e => this.onDragOver(e),\n        onDrop: e => this.onDrop(e, keyName),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"groupName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, this.state.groups[keyName].name)))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }), this.state.groups[keyName].theirOrders ? this.state.groups[keyName].theirOrders.map(eachOrder => React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, eachOrder))) : \"\", this.state.groups[keyName].totalCost !== undefined ? React.createElement(\"tr\", {\n        className: \"totalBar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, \"Total: $\", (this.state.groups[keyName].totalCost + this.state.groups[keyName].totalCost.toFixed(2) / (this.state.totalReceiptCost - this.state.totalReceiptTax) * this.state.totalReceiptTax).toFixed(2), \" (Tax: $\", (this.state.groups[keyName].totalCost.toFixed(2) / (this.state.totalReceiptCost - this.state.totalReceiptTax) * this.state.totalReceiptTax).toFixed(2), \")\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }), \"Total Tip: $\", (this.state.groups[keyName].totalCost * (this.state.tipPercent / 100)).toFixed(2))) : \"\"))))))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"topPageTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        className: \"receiptHead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"headText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, \"Number of Users: \", Object.keys(this.state.groups).length - 2))))))\n    );\n  }\n\n}\n\nexport default withRouter(AssignOrders);","map":{"version":3,"sources":["/Users/admin/Desktop/vpaynew/client/src/components/AssignOrders.js"],"names":["React","Component","Link","withRouter","axios","AssignOrders","constructor","props","onDragOver","e","preventDefault","onDragStart","ev","id","console","log","dataTransfer","setData","onDrop","cat","getData","orders","state","filter","order","orderid","parseInt","category","setState","handleConfirm","event","confirm","handleCancel","handleSubmit","get","username","then","res","data","newGroup","groups","name","theirOrders","totalCost","currentuser","errortext","catch","err","response","status","handleFinalize","post","userId","loggeduser","totalPrice","totalReceiptCost","totalReceiptTax","tipPercent","toFixed","newReceiptId","Object","keys","map","keyName","i","eachOrder","cost","receiptId","paid","itemName","price","parseFloat","error","history","push","handleChangeUsername","target","value","handleChangeTip","tipPercentChange","handleTip","allorders","trash","numberOrders","parse","text","freq","newcost","step","neworders","componentDidMount","totalAmount","taxAmount","amounts","substring","freqint","length","render","emptyOrders","undefined","t"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link,  withRouter } from 'react-router-dom';\nimport axios from 'axios';\n// import { Alert } from 'reactstrap';\n// import { UncontrolledAlert } from 'reactstrap';\nimport './AssignOrders.css'\n\nclass AssignOrders extends Component {\n  // state = {\n  //   orders: [\n  //       // {name:\"Learn Angular\",category:\"wip\", bgcolor: \"yellow\"},\n  //       // {name:\"React\", category:\"wip\", bgcolor:\"pink\"},\n  //       // {name:\"Vue\", category:\"complete\", bgcolor:\"skyblue\"}\n  //     ]\n  // }\n  constructor(props) {\n    super(props);\n    this.state = {\n      orders: [],\n      groups: {\n        allorders: {\n          name: \"All Orders\",\n          theirOrders: []\n        },\n        trash: {\n          name: \"Trash\",\n          theirOrders: []\n        }\n      },\n      totalReceiptCost: 0,\n      totalReceiptTax: 0,\n      username: \"\",\n      errortext: \"\",\n      numberOrders: 0,\n      tipPercentChange: 0,\n      tipPercent: 0,\n      confirm: false\n    }\n\n  }\n  onDragOver = (e) => {\n    e.preventDefault();\n  }\n  onDragStart = (ev, id) => {\n    console.log('dragstart: ', id);\n    ev.dataTransfer.setData(\"id\", id);\n  }\n  onDrop = (ev, cat) => {\n\n    let id = ev.dataTransfer.getData(\"id\");\n    console.log(id, \"look jjjjjj\");\n    let orders = this.state.orders.filter((order) => {\n      console.log(order.orderid, id, \"look\");\n\n      if (parseInt(order.orderid) === parseInt(id)) {\n        order.category = cat;\n      }\n      return order;\n    });\n    this.setState({\n      ...this.state,\n      orders\n    });\n  }\n\n  parse(text, freq, cost) {\n    console.log(text, \"The order has a frequency of\", freq)\n    let newcost = cost / freq;\n    let step = 0;\n    let neworders = this.state.orders;\n    while (step < freq) {\n      console.log(\"THE FREQUENCY IS: \", freq, \" THE STEP IS: \", step)\n      neworders.push({ name: text, category: \"allorders\", cost: newcost, orderid: this.state.numberOrders })\n      this.state.numberOrders = this.state.numberOrders + 1;\n      step = step + 1;\n      console.log(\"THE FREQUENCY IS: \", freq, \" THE STEP BECAME: \", step)\n    }\n    this.setState(neworders)\n  }\n\n  async componentDidMount() {\n    if (this.props.data.totalAmount) {\n      this.setState({\n        totalReceiptCost: this.props.data.totalAmount.data,\n        totalReceiptTax: this.props.data.taxAmount.data\n      })\n    }\n    var newGroup = this.state.groups;\n    newGroup[this.props.loggeduser.username] = {\n      name: this.props.loggeduser.username + \"'s Orders\",\n      id: this.props.loggeduser.id,\n      theirOrders: [],\n      totalCost: 0\n    }\n    this.setState({\n      groups: newGroup,\n    })\n    if (this.props.data.amounts) {\n      await this.props.data.amounts.map((order) => {\n        console.log(order)\n        if (order.text[0] <= '9' && order.text[0] >= '0') {\n          let step = 1;\n          while (order.text[step] <= '9' && order.text[step] >= '0') {\n            step++;\n          }\n          let freq = order.text.substring(0, step);\n          console.log(freq, \"NEAT!\");\n          let freqint = parseInt(freq, 10);\n          this.parse(order.text.substring(step, order.text.length - 1), freqint, order.data);\n        }\n\n        else {\n          this.parse(order.text, 1, order.data);\n        }\n      });\n    }\n  }\n\n  handleConfirm = (event) => {\n    console.log(\"RUNNNNNING\")\n    this.setState({ confirm : true })\n  }\n  handleCancel = (event) => {\n    this.setState({ confirm : false })\n  }\n  handleSubmit = async (event) => {\n    await axios.get(`https://vpay-backend-auth.herokuapp.com/api/users/${this.state.username}`)\n\n      .then(res => {\n        console.log(res.data, \"HERERERE\");\n        let newGroup = this.state.groups;\n        newGroup[res.data.username] = {\n          name: res.data.username + \"'s Orders\",\n          id: res.data.id,\n          theirOrders: [],\n          totalCost: 0\n        }\n        this.setState({\n          groups: newGroup,\n          currentuser: res.data,\n          errortext: \"\"\n        })\n      })\n      .catch(err => {\n        if (err.response.status === 404) {\n          this.setState({\n            errortext: \"User not found! Did you spell it correctly?\"\n          })\n\n        }\n      })\n  }\n\n  handleFinalize = async (event) => {\n    await axios.post(`https://vpay-backend-auth.herokuapp.com/api/receipts`, {\n      userId: this.props.loggeduser.id,\n      totalPrice: parseInt(((((this.state.totalReceiptCost - this.state.totalReceiptTax) * (this.state.tipPercent / 100)) + (this.state.totalReceiptCost)).toFixed(2))),\n      tipPercent: parseInt(this.state.tipPercent)\n    })\n      .then(res => {\n        console.log(res);\n        let newReceiptId = res.data;\n        Object.keys(this.state.groups).map((keyName, i) => {\n          if (this.state.groups[keyName].id === this.props.loggeduser.id) {\n            this.state.groups[keyName].theirOrders.map(async (eachOrder) => {\n              console.log(\"userId\", this.state.groups[keyName].id,\n                \"receiptId\", newReceiptId,\n                \"paid\", true,\n                \"itemName\", eachOrder.props.id,\n                \"price \", ((eachOrder.props.cost * (this.state.tipPercent / 100)) + eachOrder.props.cost + (eachOrder.props.cost * (this.state.totalReceiptTax / (this.state.totalReceiptCost - this.state.totalReceiptTax)\n                ))))\n              await axios.post(`https://vpay-backend-auth.herokuapp.com/api/orders`, {\n                userId: this.state.groups[keyName].id,\n                receiptId: newReceiptId,\n                paid: true,\n                itemName: eachOrder.props.id,\n                price: parseFloat(((eachOrder.props.cost * (this.state.tipPercent / 100)) + eachOrder.props.cost + (eachOrder.props.cost * (this.state.totalReceiptTax / (this.state.totalReceiptCost - this.state.totalReceiptTax)))).toFixed(2))\n              })\n                .then(response => {\n                  console.log(response, \"WENT THROUGH SUCCESFULLLLLLLY\")\n                }\n                )\n                .catch(error => {\n                  console.log(error.response)\n                })\n            })\n          }\n          else if ((this.state.groups[keyName].id)) {\n            this.state.groups[keyName].theirOrders.map(async (eachOrder) => (\n              await axios.post(`https://vpay-backend-auth.herokuapp.com/api/orders`, {\n                userId: this.state.groups[keyName].id,\n                receiptId: newReceiptId,\n                paid: false,\n                itemName: eachOrder.props.id,\n                price: parseFloat(((eachOrder.props.cost * (this.state.tipPercent / 100)) + eachOrder.props.cost + (eachOrder.props.cost * (this.state.totalReceiptTax / (this.state.totalReceiptCost - this.state.totalReceiptTax)))).toFixed(2))\n              })\n                .then(response => {\n                  console.log(response)\n                }\n                )\n                .catch(error => {\n                  console.log(error.response)\n                })\n            ))\n          }\n        }\n\n        )\n      })\n      .catch(err => {\n        console.log(err.response)\n      })\n      if(this.state.confirm) {\n        this.props.history.push(\"/home\");\n      }\n  }\n\n  handleChangeUsername = (event) => {\n    this.setState({ username: event.target.value })\n  }\n  handleChangeTip = (event) => {\n    this.setState({ tipPercentChange: event.target.value })\n  }\n  handleTip = (event) => {\n    event.preventDefault()\n    this.setState({ tipPercent: this.state.tipPercentChange })\n  }\n  render() {\n    Object.keys(this.state.groups).map((keyName, i) => {\n      var emptyOrders = []\n      this.state.groups[keyName].theirOrders = emptyOrders;\n      if (this.state.groups[keyName].totalCost !== undefined) {\n        this.state.groups[keyName].totalCost = 0;\n      }\n    }\n    )\n    this.state.orders.map((t) => {\n      //console.log(t, \"THIS IS WHY REACT IS REACT\")\n      if (this.state.groups[t.category].totalCost !== undefined) {\n        this.state.groups[t.category].totalCost += t.cost;\n        //console.log(typeof this.state.groups[t.category].totalCost, \"AWOIDHAWOIDHAOIWDH\")\n      }\n      this.state.groups[t.category].theirOrders.push(<div key={t.orderid} id={t.name} cost={t.cost} onDragStart={(e) => this.onDragStart(e, t.orderid)} draggable className=\"draggable\">\n        <table className=\"itemRow\">\n          <tbody >\n            <tr >\n              <td className=\"itemName\">{t.name}</td>\n              <td className=\"itemCost\">${t.cost}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>);\n    });\n    return (\n      // <div className=\"container-drag\">\n      //   <nav className=\"navbar navbar-fixed-top\">\n      //     <h1 className=\"header\">Rearrange Your Orders</h1>\n      // <button  className=\"finalize\" onClick={this.handleFinalize}>Finalize</button> \n      // <Link className=\"btn btn-danger\" to=\"/home\">Cancel</Link>\n      //   </nav>\n      // <table className=\"topPageTable\">\n      //   <thead >\n      //     <tr className=\"receiptHead\">\n      //       <td className=\"headText\">Total Cost: {this.state.totalReceiptCost} +(${this.state.totalReceiptCost*((this.state.tipPercent)/100)} Tips)</td>\n      //       <td className=\"headText\">Current Tip Percent: {this.state.tipPercent}% </td>\n      //     </tr>\n      //   </thead>\n      //   </table>\n      //     <table>\n      //     <tbody>\n      //       <tr>\n      //         <td className=\"leftBlock\">\n      // <tr >\n      //   <td className=\"firstField\"><label htmlFor=\"Username\">Add User: </label></td><td className=\"firstField\"><input type=\"text\" className=\"Username\" onChange={this.handleChangeUsername} /></td><td className=\"firstField\"><button onClick={this.handleSubmit}>Add</button></td>\n      // </tr>\n      // <tr>\n      //     <td colSpan={3}>{this.state.errortext}</td>\n      // </tr>\n      // <tr>\n      //   <td className=\"firstField\"><label htmlFor=\"Username\">Tip Percent: </label></td><td className=\"firstField\"><input type=\"number\" className=\"Username\" onChange={this.handleChangeTip} /></td><td className=\"firstField\"><button onClick={this.handleTip}>Set</button> </td>\n      // </tr>\n      //           <tr>\n      //             <td className=\"leftBot\"></td>\n      //           </tr>\n\n      //         </td>\n      //         <td>\n      //         <div className=\"allTables\">\n      //           {Object.keys(this.state.groups).map((keyName, i) => (\n      //             <div>\n      //               {/* {console.log(\"INDEX: \",i, \" GROUP NAME: \",this.state.groups[keyName], \"WHATEVER KEY NAME IS: \",keyName)} */}\n      //               <table className=\"droppable\" onDragOver={(e) => this.onDragOver(e)} onDrop={(e) => this.onDrop(e, keyName)}>\n      //                 <thead>\n      //                   <tr><td><h1 className=\"groupName\">{this.state.groups[keyName].name}</h1></td></tr>\n      //                 </thead>\n      //                 <tbody>\n      //                   <tr></tr>\n      //                   {this.state.groups[keyName].theirOrders ?\n      //                     this.state.groups[keyName].theirOrders.map((eachOrder) => (\n      //                       <tr>\n      //                         <td>\n      //                           {eachOrder}\n      //                         </td>\n      //                       </tr>\n      //                     )\n      //                     )\n      //                     :\n      //                     \"\"\n      //                   }\n      //                   {/* {console.log(this.state.groups[keyName].totalCost,\" TOTAL COST SHOULD COME\")} */}\n      //                   {this.state.groups[keyName].totalCost !== undefined ? (\n      //                     <tr className=\"totalBar\">\n      //                       <td>\n      //                         Total: ${(this.state.groups[keyName].totalCost + ((this.state.groups[keyName].totalCost.toFixed(2) / (this.state.totalReceiptCost - this.state.totalReceiptTax)) * (this.state.totalReceiptTax))).toFixed(2)} (Tax: ${((this.state.groups[keyName].totalCost.toFixed(2) / (this.state.totalReceiptCost - this.state.totalReceiptTax)) * (this.state.totalReceiptTax)).toFixed(2)})\n      //                 <br></br>\n      //                         Total Tip: ${(this.state.groups[keyName].totalCost * (this.state.tipPercent / 100)).toFixed(2)}\n      //                       </td>\n      //                     </tr>\n      //                   )\n      //                     :\n      //                     \"\"\n      //                   }\n      //                 </tbody>\n      //               </table>\n      //             </div>\n      //           )\n      //           )}\n      //         </div>\n      //       </td>\n      //     </tr>\n      //   </tbody>\n      // </table>\n\n\n      //   <div>\n      //   </div>\n      // </div>\n      <div className=\"mainPage \">\n        <nav className=\"navbar navbar-fixed-top\">\n          <h1 className=\"header\">Rearrange Your Orders</h1>\n\n          <div className=\"ml-auto\">\n            {this.state.confirm ? <div>Are you sure you want to finalize these orders? <button className=\"final\" onClick={this.handleFinalize}>Yes</button><button className=\"finalno\"onClick={this.handleCancel}>No</button></div> : (<div><button className=\"finalize btn btn-danger\" onClick={this.handleConfirm}>Finalize</button><Link className=\"btn btn-danger\" to=\"/home\">Cancel</Link></div>)}\n            \n          </div>\n        </nav>\n\n        <div>\n          <table className=\"topPageTable\">\n            <thead >\n              <tr className=\"receiptHead\">\n                <td className=\"headText\">Total Cost: {this.state.totalReceiptCost} +(${(this.state.totalReceiptCost * ((this.state.tipPercent) / 100)).toFixed(2)} Tips)</td>\n                <td className=\"headText\">Current Tip Percent: {this.state.tipPercent}% </td>\n              </tr>\n            </thead>\n          </table>\n        </div>\n\n        <div className=\"botLeftCon d-flex flex-row\">\n          <div className=\"botLeftFunc d-flex flex-fill flex-column\">\n              <div className=\"align-self-center\">\n              <tr>\n                <td className=\"firstField\"><label htmlFor=\"Username\">Add User: </label></td><td className=\"firstField\"><input type=\"text\" className=\"Username\" onChange={this.handleChangeUsername} /></td><td className=\"firstField\"><button onClick={this.handleSubmit}>Add</button></td>\n              </tr>\n              <tr>\n                <td colSpan={3}>{this.state.errortext}</td>\n              </tr>\n              <tr>\n                <td className=\"firstField\"><label htmlFor=\"Username\">Tip Percent: </label></td><td className=\"firstField\"><input type=\"number\" className=\"Username\" onChange={this.handleChangeTip} /></td><td className=\"firstField\"><button onClick={this.handleTip}>Set</button> </td>\n              </tr>\n              </div>\n\n          </div>\n          <div className=\"d-flex flex-fill flex-column\">\n            <div className=\"allTables flex-row d-flex\">\n              {Object.keys(this.state.groups).map((keyName, i) => (\n                <div>\n                  <table className=\"droppable\" onDragOver={(e) => this.onDragOver(e)} onDrop={(e) => this.onDrop(e, keyName)}>\n                    <thead>\n                      <tr><td><h1 className=\"groupName\">{this.state.groups[keyName].name}</h1></td></tr>\n                    </thead>\n                    <tbody>\n                      <tr></tr>\n                      {this.state.groups[keyName].theirOrders ?\n                        this.state.groups[keyName].theirOrders.map((eachOrder) => (\n                          <tr>\n                            <td>\n                              {eachOrder}\n                            </td>\n                          </tr>\n                        )\n                        )\n                        :\n                        \"\"\n                      }\n                      {/* {console.log(this.state.groups[keyName].totalCost,\" TOTAL COST SHOULD COME\")} */}\n                      {this.state.groups[keyName].totalCost !== undefined ? (\n                        <tr className=\"totalBar\">\n                          <td>\n                            Total: ${(this.state.groups[keyName].totalCost + ((this.state.groups[keyName].totalCost.toFixed(2) / (this.state.totalReceiptCost - this.state.totalReceiptTax)) * (this.state.totalReceiptTax))).toFixed(2)} (Tax: ${((this.state.groups[keyName].totalCost.toFixed(2) / (this.state.totalReceiptCost - this.state.totalReceiptTax)) * (this.state.totalReceiptTax)).toFixed(2)})\n                        <br></br>\n                            Total Tip: ${(this.state.groups[keyName].totalCost * (this.state.tipPercent / 100)).toFixed(2)}\n                          </td>\n                        </tr>\n                      )\n                        :\n                        \"\"\n                      }\n                    </tbody>\n                  </table>\n                </div>\n              )\n              )}\n            </div>\n          </div>\n        </div>\n        <div>\n          <table className=\"topPageTable\">\n            <thead >\n              <tr className=\"receiptHead\">\n                <td className=\"headText\">Number of Users: {Object.keys(this.state.groups).length-2}</td>\n              </tr>\n            </thead>\n          </table>\n        </div>\n      </div >\n    );\n  }\n}\n\nexport default withRouter(AssignOrders);"]},"metadata":{},"sourceType":"module"}