{"version":3,"sources":["components/images/vpayLogov1.png","store/utilities/users.js","store/utilities/loggeduser.js","store/utilities/orders.js","components/AllReceipts.js","components/AllOrders.js","components/PayButton.js","components/OrdersOwedContainer.js","components/Checkout.js","components/OrderOwed.js","components/HomePage.js","components/LoginPage.js","components/RegisterPage.js","components/AssignOrders.js","components/AccessDenied.js","RoutesView.jsx","store/utilities/receiptdata.js","App.js","serviceWorker.js","store/index.js","index.js"],"names":["module","exports","registerError","err","type","payload","registerUser","user","logIn","fetchOrdersData","orders","AllReceipts","props","state","receipts","allorders","this","setState","loggeduser","className","map","eachReceipt","key","id","onClick","totalPrice","tipPercent","length","resetOrdersData","console","log","Component","AllOrders","eachOrder","itemName","price","paid","username","PayButton","onSuccess","payment","a","axios","method","url","data","balance","amount","total","env","client","sandbox","production","currency","onError","onCancel","shipping","React","OrdersOwedContainer","order","receiptId","receipt","HomePage","onChangeHandler","event","selectedFile","target","files","logout","logOut","me","history","push","displayorder","val","tlbox","email","resetReceiptData","src","logo","alt","to","firstName","action","value","name","onChange","multiple","fetchReceiptData","amounts","withRouter","LoginPage","handleChangePassword","password","handleChangeUsername","handleSubmit","submit","preventDefault","userToLog","isLoggedIn","x","document","getElementById","onSubmit","colSpan","showPass","htmlFor","error","Register","handleChangeFirstName","handleChangeLastName","lastName","handleChangePhone","phoneNumber","handleChangeEmail","newUser","registerSuccess","NaN","pass","for","AssignOrders","onDragOver","e","onDragStart","ev","dataTransfer","setData","onDrop","cat","getData","filter","orderid","parseInt","category","handleConfirm","confirm","handleCancel","get","then","res","newGroup","groups","theirOrders","totalCost","currentuser","errortext","catch","response","status","handleFinalize","post","userId","totalReceiptCost","totalReceiptTax","toFixed","newReceiptId","Object","keys","keyName","i","cost","parseFloat","handleChangeTip","tipPercentChange","handleTip","trash","numberOrders","text","freq","newcost","step","neworders","totalAmount","taxAmount","substring","freqint","parse","undefined","t","draggable","AccessDenied","RoutesView","LoginComponent","exact","path","render","users","receiptdata","component","connect","success","dispatch","registerUserThunk","withCredentials","dispatchOrHistoryErr","logInThunk","delete","filename","FormData","append","headers","fetchOrdersDataThunk","App","Boolean","window","location","hostname","match","addEventListener","title","content","JSON","options","body","icon","badge","waitUntil","registration","showNotification","rootReducer","combineReducers","logger","createLogger","collapsed","middleware","composeWithDevTools","applyMiddleware","thunkMiddleware","store","createStore","ReactDOM","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.dc34c28c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/vpayLogov1.2cade39d.png\";","import axios from 'axios';\n// ACTION TYPES;\nconst REGISTER_USER = \"REGISTER_USER\";\nconst REGISTER_ERROR = \"REGISTER_ERROR\";\n\n// ACTION CREATOR;\n\nconst registerError = (err) => {\n    return {\n        type: REGISTER_ERROR,\n        payload: err\n    }\n}\nconst registerUser = (user) => {\n    return {\n        type: REGISTER_USER,\n        payload: user\n    }\n}\n\n// Thunks go here!\nexport const registerUserThunk = (user) => async (dispatch) => {\n    await axios.post(`https://vpay-backend-auth.herokuapp.com/auth/signup`, {\n        username : user.username,\n        firstName : user.firstName,\n        lastName : user.lastName,\n        password : user.password,\n        phoneNumber : user.phoneNumber,\n        email : user.email\n    })\n    .then(res => {\n        console.log(res);\n        dispatch(registerUser({success : \"User Successfully Registered!\"}));\n    })\n    .catch(err => {\n        console.log(err.response)\n        dispatch(registerError(err));\n        \n    })\n}\n\n\n// REDUCER FUNCTION;\nexport default (state = [], action) => {\n    switch (action.type) {\n        case REGISTER_USER:\n            return action.payload;\n        case REGISTER_ERROR:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import axios from 'axios';\n// ACTION TYPES;\nconst LOG_IN = \"LOG_IN\";\nconst LOG_OUT = \"LOG_OUT\";\nconst ERROR = \"ERROR\";\n\n// ACTION CREATOR;\nconst logIn = (user) => {\n    return {\n        type: LOG_IN,\n        payload: user\n    }\n}\nconst logOut = () => {\n    return {\n        type: LOG_OUT,\n    }\n}\n\nconst error = (err) => {\n    return {\n        type: ERROR,\n        payload: err\n    }\n}\n// Thunks go here!\nexport const logInThunk = (user) => async (dispatch) => {\n    let res;\n    try {\n        console.log(user);\n        res = await axios.post(`https://vpay-backend-auth.herokuapp.com/auth/login`, {\n            \"username\": user.username,\n            \"password\": user.password\n        }, { withCredentials: true })\n    }\n    catch (authError) {\n        return dispatch(error(authError));\n    }\n\n    try {\n        console.log(res.data, \"THIS IS OUR INITIAL DATA\");\n        dispatch(logIn(res.data));\n    }\n    catch (dispatchOrHistoryErr) {\n        console.error(dispatchOrHistoryErr)\n    }\n}\n\nexport const me = () => async dispatch => {\n    try {\n        console.log('auth')\n        const res = await axios.get(`https://vpay-backend-auth.herokuapp.com/auth/me`, { withCredentials: true });\n        dispatch(logIn(res.data || {}));\n    }\n    catch (err) {\n        console.error(err);\n    }\n}\nexport const logOutThunk = () => async (dispatch) => {\n    try {\n\n        await axios.delete('https://vpay-backend-auth.herokuapp.com/auth/logout', { withCredentials: true });\n        dispatch(logOut());\n    }\n    catch (err) {\n        console.error(err);\n    }\n}\n\n// REDUCER FUNCTION;\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case LOG_IN:\n            return action.payload;\n        case LOG_OUT:\n            return {};\n        case ERROR:\n            return action.payload;\n        default:\n            return state;\n    }\n}","// ACTION TYPES;\nconst FETCH_ORDERS_DATA = \"FETCH_ORDERS_DATA\";\nconst RESET_ORDERS_DATA = \"RESET_ORDERS_DATA\";\n\n// ACTION CREATOR;\nconst fetchOrdersData = (orders) => {\n    return {\n        type: FETCH_ORDERS_DATA,\n        payload: orders\n    }\n}\n\nconst resetOrdersData = () => {\n  return {\n    type: RESET_ORDERS_DATA\n  }\n}\n\n// Thunks go here!\nexport const fetchOrdersDataThunk = (orders) => async (dispatch) => {\n    dispatch(fetchOrdersData(orders));\n}\n\nexport const resetOrdersDataThunk = () => (dispatch) => {\n  let resolvedActionObject = resetOrdersData(); \n  dispatch(resolvedActionObject);\n}\n\n// REDUCER FUNCTION;\nexport default (state = [], action) => {\n    switch (action.type) {\n        case FETCH_ORDERS_DATA:\n            return action.payload;\n        case RESET_ORDERS_DATA:\n            return [];\n        default:\n            return state;\n    }\n}","import React, { Component } from 'react';\nimport './AllReceipts.css';\n\nclass AllReceipts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            receipts: [],\n            allorders: []\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n            receipts : this.props.loggeduser.receipts\n        })\n    }\n\n    // viewreceipt = (eachReceipt) =>{\n    //     console.log(\"DAWDAWD\")\n    //     document.getElementsByClassName(\"welcomeTableText\")[0].innerHTML = \"\";\n    //     var allOrders = []\n\n    //                         eachReceipt.orders.map(item => {\n    //                         allOrders.push(\n    //                             <div id={item.id} className=\"order\" key={item.id}>\n    //                                 <div className=\"orderContent\">\n    //                                     <p>\n    //                                         <span className=\"orderId\"><u>Order No:</u> {item.id}</span>\n    //                                         <div className=\"orderName\"><u>Order Name:</u> {item.itemName}</div>\n    //                                         <div className=\"orderPrice\"><u>Price:</u> {item.price}</div>\n    //                                     </p>\n    //                                 </div>\n    //                             </div>\n    //                         )\n\n\n\n    //                         })\n                        \n    //     return allOrders\n    // }\n\n    render() {\n        return (\n            <table className=\"ReceiptTable\">\n                <thead>\n                    <tr>\n                        <td></td>\n                        <td>ID</td>\n                        <td>Total</td>\n                        <td>Tip Percent</td>\n                        <td>Orders</td>\n                        <td></td>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.state.receipts ? \n                    this.state.receipts.map((eachReceipt) => (\n                        <tr key={eachReceipt.id}>\n                          <td className=\"cView\">\n                          <button onClick={() => this.props.fetchOrdersData(eachReceipt.orders)} className=\"bView\">View</button>\n                          </td>\n                          <td>\n                            {eachReceipt.id}\n                          </td>\n                          <td>\n                              ${eachReceipt.totalPrice}\n                          </td>\n                          <td>\n                              {eachReceipt.tipPercent}%\n                          </td>\n                          <td>\n                              {eachReceipt.orders.length} Orders\n                          </td>\n                          <td className=\"cDel\">\n                             <button className=\"bDel\" onClick={() => this.props.resetOrdersData()}>Hide</button>\n                          </td>\n                          {console.log(eachReceipt, \"each one\")}\n                        </tr>\n                      )\n                      )\n                    :\n                    \"\" }\n                    <tr>\n\n                    </tr>\n                </tbody>\n            </table>\n        )\n    }\n}\n\nexport default AllReceipts;","import React, { Component } from 'react';\nimport './AllReceipts.css';\n\nclass AllOrders extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            orders : [],\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n            orders : this.props.orders\n        })\n    }\n    render() {\n        return (\n            <table className=\"ReceiptTable\">\n                <thead>\n                    <tr>\n                        <td>ID</td>\n                        <td>Item Name</td>\n                        <td>Price</td>\n                        <td>Paid</td>\n                        <td>Owner</td>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.state.orders[0] ? \n                    this.state.orders.map((eachOrder) => (\n                        <tr key={eachOrder.id}>\n                          <td>\n                            {eachOrder.id}\n                          </td>\n                          <td>\n                            {eachOrder.itemName}\n                          </td>\n                          <td>\n                            ${eachOrder.price}\n                          </td>\n                          <td>\n                              {eachOrder.paid ? \"Yes\" : \"No\"}\n                          </td>\n                          <td>\n                              {eachOrder.user.username}\n                          </td>\n                          {console.log(eachOrder, \"each one\")}\n                        </tr>\n                      )\n                      )\n                    :\n                    \"\" }\n                    <tr>\n\n                    </tr>\n                </tbody>\n            </table>\n        )\n    }\n}\n\nexport default AllOrders;","//https://www.npmjs.com/package/react-paypal-express-checkout\n\nimport React from 'react';\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\nimport axios from 'axios';\n\nexport default class PayButton extends React.Component {\n    render() {\n        const onSuccess = async (payment) => {\n            // Congratulation, it came here means everything's fine!\n            \t\tconsole.log(\"The payment was succeeded!\", payment);\n                    // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\n                    await axios({\n                        method: 'put',\n                        url: 'https://vpay-backend-auth.herokuapp.com/api/users/balance',\n                        data: {\n                          username: this.props.username,\n                          balance: this.props.balance + this.props.amount\n                        }\n                      });\n                      await axios({\n                        method: 'put',\n                        url: 'https://vpay-backend-auth.herokuapp.com/api/orders/'+this.props.id,\n                        data: {\n                          username: this.props.username,\n                          paid: true\n                        }\n                      });\n                      \n        }\n \n        const onCancel = (data) => {\n            // User pressed \"cancel\" or close Paypal's popup!\n            console.log('The payment was cancelled!', data);\n            // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\n        }\n \n        const onError = (err) => {\n            // The main Paypal's script cannot be loaded or somethings block the loading of that script!\n            console.log(\"Error!\", err);\n            // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\n            // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\n        }\n \n        let env = 'sandbox'; // you can set here to 'production' for production\n        let currency = 'USD'; // or you can set this value from your props or state\n        let total = this.props.amount; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\n        // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\n \n        const client = {\n            sandbox:    'AYc_WD_FqZRhsF9vpUmXank8pwsAMS9Xjz3y89LeJ3kXQ_f5jumCjCIKnvYafaGZ0QOHYVs9GeY-M7cF',\n            production: 'YOUR-PRODUCTION-APP-ID',\n        }\n        // In order to get production's app-ID, you will have to send your app to Paypal for approval first\n        // For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\n        //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\n        // For production app-ID:\n        //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\n \n        // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\n        return (\n            <PaypalExpressBtn env={env} client={client} currency={currency} total={total} onError={onError} onSuccess={onSuccess} onCancel={onCancel} shipping={1} />\n        );\n    }\n}","import React, { Component } from 'react';\nimport './OrdersOwedContainer.css';\nimport OrderOwed from './OrderOwed';\nimport PayButton from './PayButton';\n\nclass OrdersOwedContainer extends Component {\n    state = {\n        orders: []\n    }\n    componentDidMount() {\n        this.setState({\n            orders: this.props.loggeduser.orders,\n            username: this.props.loggeduser.username,\n            balance: this.props.loggeduser.balance\n        })\n    }\n    render() {\n        console.log(this.state.orders)\n        return (\n            <table className=\"ReceiptTable\">\n                <thead>\n                    <tr>\n                        <td>Item ID</td>\n                        <td>Item Name</td>\n                        <td>Price</td>\n                        <td>Receipt ID</td>\n                        <td></td>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.state.orders ?\n                        this.state.orders.map((order) => (\n                            <tr key={order.id}>\n                                <td>\n                                    {order.id}\n                                </td>\n                                <td>\n                                    {order.itemName}\n                                </td>\n                                <td>\n                                    ${order.price}\n                                </td>\n                                <td>\n                                    {order.receiptId}\n                                </td>\n                                <td>\n                                    {order.paid ?\n                                        \"Paid!\"\n                                        :\n                                        <PayButton id={order.id} username={order.receipt.user.username} balance={this.state.balance} amount={order.price} />\n                                    }\n                                </td>\n                            </tr>\n                        )\n                        )\n                        :\n                        \"\"}\n                    <tr>\n\n                    </tr>\n                </tbody>\n            </table>\n        )\n    }\n}\n\nexport default OrdersOwedContainer;","//https://alligator.io/react/payments-stripe-checkout-react/\nimport React from 'react'\nimport StripeCheckout from 'react-stripe-checkout';\n\nexport default class Checkout extends React.Component {\n  onToken = (token) => {\n    fetch('/', {\n      method: 'POST',\n      body: JSON.stringify(token),\n    }).then(response => {\n      response.json().then(data => {\n        alert(`We are in business, ${data.email}`);\n      });\n    });\n  }\n\n\n  render() {\n    return (\n\n      <StripeCheckout\n  name=\"Three Comma Co.\" // the pop-in header title\n  description=\"Big Data Stuff\" // the pop-in header subtitle\n  ComponentClass=\"div\"\n  panelLabel=\"Give Money\" // prepended to the amount in the bottom pay button\n  amount={1} // cents\n  currency=\"USD\"\n  stripeKey=\"pk_test_hfNtvnDTImDlfxB6uQCE3025008fhH22Aq\"\n\n\n  allowRememberMe // \"Remember Me\" option (default true)\n  token={this.onToken} // submit callback\n  opened={this.onOpened} // called when the checkout popin is opened (no IE6/7)\n  closed={this.onClosed} // called when the checkout popin is closed (no IE6/7)\n  // Note: `reconfigureOnUpdate` should be set to true IFF, for some reason\n  // you are using multiple stripe keys\n  reconfigureOnUpdate={false}\n  // Note: you can change the event to `onTouchTap`, `onClick`, `onTouchStart`\n  // useful if you're using React-Tap-Event-Plugin\n  triggerEvent=\"onClick\"\n  >\n  <button className=\"btn btn-primary\">\n    Use your own child component, which gets wrapped in whatever\n    component you pass into as \"ComponentClass\" (defaults to span)\n  </button>\n</StripeCheckout>\n    )\n  }\n}","// NO LONGER IN USE, CAN STILL USE THIS TO LOOK OVER\n\n\n\n\n\nimport React, { Component } from 'react';\nimport './OrderOwed.css';\nimport PayButton from './PayButton'\nimport Checkout from './Checkout';\n\nclass OrderOwed extends Component {\n    render() {\n        const order = this.props.order;\n        console.log(order);\n    return (\n        <div className=\"card\">\n            {/* <div className=\"row row-title\">\n                <h1>Order number {this.props.id}</h1>\n            </div>\n            <div className=\"row\">\n                <div class=\"col col-title\">ID</div>\n                <div class=\"col col-title\">Item Name</div>\n                <div class=\"col col-title\">Price</div>\n            </div>\n            <div className=\"row\">\n                <div class=\"col\">{order.id}</div>\n                <div class=\"col\">{order.itemName}</div>\n                <div class=\"col\">{order.price}</div>\n            </div>\n            <div className=\"row\">\n                <div class=\"col col-title\">paid:</div>\n                <div class=\"col col-title\">receiptId:</div>\n                <div class=\"col col-title\">userId:</div>\n            </div>\n            <div className=\"row\">\n                <div class=\"col\">{order.paid.toString()}</div>\n                <div class=\"col\">{order.receiptId}</div>\n                <div class=\"col\">{order.userId}</div>\n            </div>\n            <div className=\"row\">\n                <div class=\"col\"><button type=\"button\" class=\"btn btn-primary\">Pay now?</button></div>\n            </div> */}\n        \n        \n           \n        </div>\n    )\n  }\n}\n    \nexport default OrderOwed;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './HomePage.css';\nimport AllReceipts from './AllReceipts';\nimport AllOrders from './AllOrders';\nimport OrdersOwedContainer from './OrdersOwedContainer';\nimport { withRouter } from 'react-router-dom';\nimport logo from './images/vpayLogov1.png';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedFile: null,\n      tlbox: [],\n      amount: this.props.loggeduser.balance,\n      email: this.props.loggeduser.email,\n      username: this.props.loggeduser.username\n    }\n    console.log(this.props.loggeduser)\n\n  }\n\n  componentDidMount() {\n    this.props.resetReceiptData();\n    this.props.resetOrdersData();\n    //console.log(this.props.loggeduser.email)\n  }\n  onChangeHandler = event => {\n    this.setState({\n      selectedFile: event.target.files[0]\n    })\n    console.log(event.target.files[0])\n\n  }\n\n  logout = () => {\n    console.log('logout')\n    this.props.logOut();\n    this.props.me();\n    this.props.history.push('/')\n  }\n\n  displayorder = (val) => {\n    this.setState({ tlbox: val })\n  }\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n\n        <nav className=\"navbar navbar-fixed-top\">\n          <img className=\"logoImg\" src={logo} alt=\"logo\" />\n          <Link className=\"btn btn-danger\" to='/' onClick={this.logout}>Log out</Link>\n        </nav>\n\n        <div className=\"row\">\n          {this.props.orders[0] ?\n            <div className=\"colTR\">\n              <div className=\"TopRow\">\n                <h1 className=\"headingLabel\">Orders of Receipt {this.props.orders[0].receiptId}</h1>\n              </div>\n              <div className=\"TopRowTX\">\n                <div className=\"receiptHistory\">\n                  <AllOrders  orders={this.props.orders} />\n                </div>\n              </div>\n            </div>\n\n\n            :\n            <div className=\"colTL\">\n              <div className=\"TopRow\">\n                <table className=\"welcomeTable\">\n                  <tbody>\n                    <tr>\n                      <td className=\"welcomeTableText\">\n                        <h1>Nice day for some food, {this.props.loggeduser.firstName}!</h1>\n                        Through this website, you'll be able to assign the orders that your friend/family/enemy made with YOUR money. Have them pay you back so you can call it even!\n                              You have ${this.props.loggeduser.balance} in your balance\n                            </td>\n                      <td>\n                      </td>\n                    </tr>\n                    <tr className=\"OrdersInfo\">\n                      {this.state.tlbox}\n                    </tr>\n                    <tr>\n                      <div>\n                        {console.log(this.props)}\n                        {this.props.loggeduser.balance == 0 ?\n                        \"\":\n                        <form action={\"/pay/\" + this.state.amount + \"/\" + this.state.email + \"/\" + this.props.loggeduser.username} method=\"post\">\n                          <input className=\"cView\"type=\"submit\" value=\"Cash out\"></input>\n                        </form>\n                        }\n                      </div>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          }\n\n\n          <div className=\"colTR\">\n            <div className=\"TopRow\">\n              <h1 className=\"headingLabel\">Receipt History</h1>\n            </div>\n            <div className=\"TopRowTX\">\n              <div className=\"receiptHistory\">\n                <AllReceipts displayorder={this.displayorder} loggeduser={this.props.loggeduser} fetchOrdersData={this.props.fetchOrdersData} resetOrdersData={this.props.resetOrdersData} />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"colBL\">\n            <div className=\"TopRow\">\n              <h1 className=\"headingLabel\" >Upload A Receipt</h1>\n            </div>\n            <div className=\"TopRowT\">\n              <form method=\"post\" action=\"#\" id=\"#\" className=\"upload-form\">\n                <div className=\"form-group files\">\n                  <input type=\"file\" className=\"form-control\" name=\"file\" onChange={this.onChangeHandler} multiple=\"\" />\n                </div>\n                <center>\n              <button type=\"button\" className=\"uploadButton\" onClick={() => this.props.fetchReceiptData(this.state.selectedFile)}>Upload</button>\n              {this.props.data.amounts ?\n                <Link to=\"/orders\">\n                  <button className=\"toOrdersButtonS\">Proceed</button></Link> :\n                <button className=\"toOrdersButtonB\">No Orders</button>}\n            </center>\n              </form>\n            </div>\n\n          </div>\n          <div className=\"colBR\">\n            <div className=\"TopRow\">\n              <h1 className=\"headingLabel\">Order History</h1>\n            </div>\n            <div className=\"TopRowTX\">\n              <div className=\"receiptHistory\">\n                <OrdersOwedContainer loggeduser={this.props.loggeduser} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(HomePage);","import React, { Component } from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport './LoginPage.css';\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: '',\n      username: '',\n    }\n  }\n  handleChangePassword = (event) => {\n    this.setState({ password: event.target.value })\n  }\n  handleChangeUsername = (event) => {\n    this.setState({ username: event.target.value })\n  }\n  handleSubmit = async (submit) => {\n    submit.preventDefault()\n    const userToLog = {\n      \"username\": this.state.username,\n      \"password\": this.state.password,\n    }\n    await this.props.logIn(userToLog)\n    if(this.props.isLoggedIn) {\n      this.props.history.push(\"/home\");\n    }\n  }\n  showPass() {\n    var x = document.getElementById(\"password\");\n    if (x.type === \"password\") {\n      x.type = \"text\";\n    } else {\n      x.type = \"password\";\n    }\n  }\n  \n  render() {\n    // let imgUrl = 'images/berlin.jpg'\n    // let styles = {\n    //     root: {\n    //         backgroundImage: 'url(' + imgUrl + ')',\n    //         backgroundSize: 'cover',\n    //         overflow: 'hidden',\n    //     },\n    // }\n    return (\n      <div className=\"LogInPage\">\n        <form onSubmit={this.handleSubmit} className=\"form\">\n          <table className='LogInTable'>\n            <thead>\n              <tr><td colSpan={2}><h1 className=\"LogInTitle\">Welcome</h1></td></tr>\n            </thead>\n            {this.props.isLoggedIn ? \n            <tbody>\n              <tr><td>Successfully Logged in!</td></tr>\n              <tr><td><Link to =\"/home\">Go to Home</Link></td></tr>\n            </tbody>\n            :\n            <tbody >\n              <tr><td className=\"TextField\">Username:</td><td className=\"inputField\"><input type=\"text\" className=\"Username\" onChange={this.handleChangeUsername} /></td></tr>\n              <tr><td className=\"TextField\">Password:</td><td className=\"inputField\"><input type=\"password\" className=\"Password\" id=\"password\" onChange={this.handleChangePassword}></input></td></tr>\n              <tr><td colSpan={2} className=\"showPassword\"><input type=\"checkbox\" className=\"showPassCheck\"id='show-password' onClick={this.showPass}></input><label htmlFor='show-password'>Show Password</label></td></tr>\n              <tr><td colSpan={2} className=\"ErrorDisplay\">{this.props.error ? this.props.error.data : \"\"}</td></tr>\n              <tr><td colSpan={2}><button className=\"LoginButton\">Login</button></td></tr>\n              <tr><td colSpan={2} className=\"RegisterLink\">Don't have an account? <Link to=\"/register\">Register</Link></td></tr>\n            </tbody>\n            }\n          </table>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(LoginPage);","import React, { Component } from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport './RegisterPage.css';\n\nclass Register extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        firstName: '',\n        lastName: '',\n        password: '',\n        username: '',\n        phoneNumber: NaN,\n        email: '',\n      }\n    }\n    showPass(){\n      var pass = document.getElementById(\"password\");\n      if (pass.type === \"password\") {\n        pass.type = \"text\";\n      } else {\n        pass.type = \"password\";\n      }\n    }\n    handleChangeFirstName = (event) => {\n      this.setState({firstName: event.target.value})\n    }\n    handleChangeLastName = (event) => {\n      this.setState({lastName: event.target.value})\n    }\n    handleChangePassword = (event) => {\n      this.setState({password: event.target.value})\n    }\n    handleChangeUsername = (event) => {\n      this.setState({username: event.target.value})\n    }\n    handleChangePhone = (event) => {\n      this.setState({phoneNumber: event.target.value})\n    }\n    handleChangeEmail = (event) => {\n      this.setState({email: event.target.value})\n    }\n    handleSubmit = async (submit) => {\n      submit.preventDefault()\n      const newUser = {\n        \"firstName\": this.state.firstName,\n        \"lastName\": this.state.lastName,\n        \"password\": this.state.password,\n        \"username\": this.state.username,\n        \"phoneNumber\": this.state.phoneNumber,\n        \"email\": this.state.email,\n      } \n      await this.props.registerUser(newUser);\n      \n      if(this.props.registerSuccess === \"User Successfully Registered!\") {\n        this.props.history.push(\"/login\");\n      }\n    }\n    render() {\n    return (\n        <div className='registerPage'>\n          <form onSubmit={this.handleSubmit} className=\"form\">\n          <table className='registerTable'>\n            <thead>\n              <tr><td colSpan={2}><h1 className=\"registerTitle\">Sign Up</h1></td></tr>\n            </thead>\n            <tbody >\n              <tr><td className=\"TextField\">Username:</td><td className=\"inputFieldR\"><input type=\"text\" className=\"Username\" onChange={this.handleChangeUsername} /></td></tr>\n              <tr><td className=\"TextField\">Password:</td><td className=\"inputFieldR\"><input type=\"password\" className=\"Password\" id=\"password\" onChange={this.handleChangePassword}></input></td></tr>\n              <tr><td colSpan={2} className=\"showPassword\"><input type=\"checkbox\" className=\"showPassCheck\"id='show-password' onClick={this.showPass}></input><label for='show-password'>Show Password</label></td></tr>\n              <tr><td className=\"TextField\">First Name:</td><td className=\"inputFieldR\"><input type=\"text\" className=\"firstName\" onChange={this.handleChangeFirstName} /></td></tr>\n              <tr><td className=\"TextField\">Last Name:</td><td className=\"inputFieldR\"><input type=\"text\" className=\"lastName\"  onChange={this.handleChangeLastName}></input></td></tr>\n              <tr><td className=\"TextField\">Phone Number:</td><td className=\"inputFieldR\"><input type=\"number\" className=\"phoneNumber\" onChange={this.handleChangePhone} /></td></tr>\n              <tr><td className=\"TextField\">Email:</td><td className=\"inputFieldR\"><input type=\"text\" className=\"email\"  onChange={this.handleChangeEmail}></input></td></tr>\n              <tr>{this.props.registerSuccess ? <td colSpan={2} className=\"successMessage\">{this.props.registerSuccess}</td> : \"\"}{this.props.registerError ? <td colSpan={2} className =\"errorMessage\">{this.props.registerError.data}</td> : \"\"}</tr>\n              <tr><td colSpan={2}><button className=\"registerButton\">Register</button></td></tr>\n              <tr><td colSpan={2}><Link className=\"cancelButton\"to =\"/\">Cancel</Link></td></tr>\n              <tr></tr>\n            </tbody>\n          </table>\n        </form>\n        </div>\n    )\n  }\n  }\n    \nexport default withRouter(Register);","import React, { Component } from 'react';\nimport { Link,  withRouter } from 'react-router-dom';\nimport axios from 'axios';\n// import { Alert } from 'reactstrap';\n// import { UncontrolledAlert } from 'reactstrap';\nimport './AssignOrders.css'\n\nclass AssignOrders extends Component {\n  // state = {\n  //   orders: [\n  //       // {name:\"Learn Angular\",category:\"wip\", bgcolor: \"yellow\"},\n  //       // {name:\"React\", category:\"wip\", bgcolor:\"pink\"},\n  //       // {name:\"Vue\", category:\"complete\", bgcolor:\"skyblue\"}\n  //     ]\n  // }\n  constructor(props) {\n    super(props);\n    this.state = {\n      orders: [],\n      groups: {\n        allorders: {\n          name: \"All Orders\",\n          theirOrders: []\n        },\n        trash: {\n          name: \"Trash\",\n          theirOrders: []\n        }\n      },\n      totalReceiptCost: 0,\n      totalReceiptTax: 0,\n      username: \"\",\n      errortext: \"\",\n      numberOrders: 0,\n      tipPercentChange: 0,\n      tipPercent: 0,\n      confirm: false\n    }\n\n  }\n  onDragOver = (e) => {\n    e.preventDefault();\n  }\n  onDragStart = (ev, id) => {\n    console.log('dragstart: ', id);\n    ev.dataTransfer.setData(\"id\", id);\n  }\n  onDrop = (ev, cat) => {\n\n    let id = ev.dataTransfer.getData(\"id\");\n    console.log(id, \"look jjjjjj\");\n    let orders = this.state.orders.filter((order) => {\n      console.log(order.orderid, id, \"look\");\n\n      if (parseInt(order.orderid) === parseInt(id)) {\n        order.category = cat;\n      }\n      return order;\n    });\n    this.setState({\n      ...this.state,\n      orders\n    });\n  }\n\n  parse(text, freq, cost) {\n    console.log(text, \"The order has a frequency of\", freq)\n    let newcost = cost / freq;\n    let step = 0;\n    let neworders = this.state.orders;\n    while (step < freq) {\n      console.log(\"THE FREQUENCY IS: \", freq, \" THE STEP IS: \", step)\n      neworders.push({ name: text, category: \"allorders\", cost: newcost, orderid: this.state.numberOrders })\n      this.state.numberOrders = this.state.numberOrders + 1;\n      step = step + 1;\n      console.log(\"THE FREQUENCY IS: \", freq, \" THE STEP BECAME: \", step)\n    }\n    this.setState(neworders)\n  }\n\n  async componentDidMount() {\n    if (this.props.data.totalAmount) {\n      this.setState({\n        totalReceiptCost: this.props.data.totalAmount.data,\n        totalReceiptTax: this.props.data.taxAmount.data\n      })\n    }\n    var newGroup = this.state.groups;\n    newGroup[this.props.loggeduser.username] = {\n      name: this.props.loggeduser.username + \"'s Orders\",\n      id: this.props.loggeduser.id,\n      theirOrders: [],\n      totalCost: 0\n    }\n    this.setState({\n      groups: newGroup,\n    })\n    if (this.props.data.amounts) {\n      await this.props.data.amounts.map((order) => {\n        console.log(order)\n        if (order.text[0] <= '9' && order.text[0] >= '0') {\n          let step = 1;\n          while (order.text[step] <= '9' && order.text[step] >= '0') {\n            step++;\n          }\n          let freq = order.text.substring(0, step);\n          console.log(freq, \"NEAT!\");\n          let freqint = parseInt(freq, 10);\n          this.parse(order.text.substring(step, order.text.length - 1), freqint, order.data);\n        }\n\n        else {\n          this.parse(order.text, 1, order.data);\n        }\n      });\n    }\n  }\n\n  handleConfirm = (event) => {\n    console.log(\"RUNNNNNING\")\n    this.setState({ confirm : true })\n  }\n  handleCancel = (event) => {\n    this.setState({ confirm : false })\n  }\n  handleSubmit = async (event) => {\n    await axios.get(`https://vpay-backend-auth.herokuapp.com/api/users/${this.state.username}`)\n\n      .then(res => {\n        console.log(res.data, \"HERERERE\");\n        let newGroup = this.state.groups;\n        newGroup[res.data.username] = {\n          name: res.data.username + \"'s Orders\",\n          id: res.data.id,\n          theirOrders: [],\n          totalCost: 0\n        }\n        this.setState({\n          groups: newGroup,\n          currentuser: res.data,\n          errortext: \"\"\n        })\n      })\n      .catch(err => {\n        if (err.response.status === 404) {\n          this.setState({\n            errortext: \"User not found! Did you spell it correctly?\"\n          })\n\n        }\n      })\n  }\n\n  handleFinalize = async (event) => {\n    await axios.post(`https://vpay-backend-auth.herokuapp.com/api/receipts`, {\n      userId: this.props.loggeduser.id,\n      totalPrice: parseInt(((((this.state.totalReceiptCost - this.state.totalReceiptTax) * (this.state.tipPercent / 100)) + (this.state.totalReceiptCost)).toFixed(2))),\n      tipPercent: parseInt(this.state.tipPercent)\n    })\n      .then(res => {\n        console.log(res);\n        let newReceiptId = res.data;\n        Object.keys(this.state.groups).map((keyName, i) => {\n          if (this.state.groups[keyName].id === this.props.loggeduser.id) {\n            this.state.groups[keyName].theirOrders.map(async (eachOrder) => {\n              console.log(\"userId\", this.state.groups[keyName].id,\n                \"receiptId\", newReceiptId,\n                \"paid\", true,\n                \"itemName\", eachOrder.props.id,\n                \"price \", ((eachOrder.props.cost * (this.state.tipPercent / 100)) + eachOrder.props.cost + (eachOrder.props.cost * (this.state.totalReceiptTax / (this.state.totalReceiptCost - this.state.totalReceiptTax)\n                ))))\n              await axios.post(`https://vpay-backend-auth.herokuapp.com/api/orders`, {\n                userId: this.state.groups[keyName].id,\n                receiptId: newReceiptId,\n                paid: true,\n                itemName: eachOrder.props.id,\n                price: parseFloat(((eachOrder.props.cost * (this.state.tipPercent / 100)) + eachOrder.props.cost + (eachOrder.props.cost * (this.state.totalReceiptTax / (this.state.totalReceiptCost - this.state.totalReceiptTax)))).toFixed(2))\n              })\n                .then(response => {\n                  console.log(response, \"WENT THROUGH SUCCESFULLLLLLLY\")\n                }\n                )\n                .catch(error => {\n                  console.log(error.response)\n                })\n            })\n          }\n          else if ((this.state.groups[keyName].id)) {\n            this.state.groups[keyName].theirOrders.map(async (eachOrder) => (\n              await axios.post(`https://vpay-backend-auth.herokuapp.com/api/orders`, {\n                userId: this.state.groups[keyName].id,\n                receiptId: newReceiptId,\n                paid: false,\n                itemName: eachOrder.props.id,\n                price: parseFloat(((eachOrder.props.cost * (this.state.tipPercent / 100)) + eachOrder.props.cost + (eachOrder.props.cost * (this.state.totalReceiptTax / (this.state.totalReceiptCost - this.state.totalReceiptTax)))).toFixed(2))\n              })\n                .then(response => {\n                  console.log(response)\n                }\n                )\n                .catch(error => {\n                  console.log(error.response)\n                })\n            ))\n          }\n        }\n\n        )\n      })\n      .catch(err => {\n        console.log(err.response)\n      })\n      if(this.state.confirm) {\n        this.props.history.push(\"/home\");\n      }\n  }\n\n  handleChangeUsername = (event) => {\n    this.setState({ username: event.target.value })\n  }\n  handleChangeTip = (event) => {\n    this.setState({ tipPercentChange: event.target.value })\n  }\n  handleTip = (event) => {\n    event.preventDefault()\n    this.setState({ tipPercent: this.state.tipPercentChange })\n  }\n  render() {\n    Object.keys(this.state.groups).map((keyName, i) => {\n      var emptyOrders = []\n      this.state.groups[keyName].theirOrders = emptyOrders;\n      if (this.state.groups[keyName].totalCost !== undefined) {\n        this.state.groups[keyName].totalCost = 0;\n      }\n    }\n    )\n    this.state.orders.map((t) => {\n      //console.log(t, \"THIS IS WHY REACT IS REACT\")\n      if (this.state.groups[t.category].totalCost !== undefined) {\n        this.state.groups[t.category].totalCost += t.cost;\n        //console.log(typeof this.state.groups[t.category].totalCost, \"AWOIDHAWOIDHAOIWDH\")\n      }\n      this.state.groups[t.category].theirOrders.push(<div key={t.orderid} id={t.name} cost={t.cost} onDragStart={(e) => this.onDragStart(e, t.orderid)} draggable className=\"draggable\">\n        <table className=\"itemRow\">\n          <tbody >\n            <tr >\n              <td className=\"itemName\">{t.name}</td>\n              <td className=\"itemCost\">${t.cost}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>);\n    });\n    return (\n      // <div className=\"container-drag\">\n      //   <nav className=\"navbar navbar-fixed-top\">\n      //     <h1 className=\"header\">Rearrange Your Orders</h1>\n      // <button  className=\"finalize\" onClick={this.handleFinalize}>Finalize</button> \n      // <Link className=\"btn btn-danger\" to=\"/home\">Cancel</Link>\n      //   </nav>\n      // <table className=\"topPageTable\">\n      //   <thead >\n      //     <tr className=\"receiptHead\">\n      //       <td className=\"headText\">Total Cost: {this.state.totalReceiptCost} +(${this.state.totalReceiptCost*((this.state.tipPercent)/100)} Tips)</td>\n      //       <td className=\"headText\">Current Tip Percent: {this.state.tipPercent}% </td>\n      //     </tr>\n      //   </thead>\n      //   </table>\n      //     <table>\n      //     <tbody>\n      //       <tr>\n      //         <td className=\"leftBlock\">\n      // <tr >\n      //   <td className=\"firstField\"><label htmlFor=\"Username\">Add User: </label></td><td className=\"firstField\"><input type=\"text\" className=\"Username\" onChange={this.handleChangeUsername} /></td><td className=\"firstField\"><button onClick={this.handleSubmit}>Add</button></td>\n      // </tr>\n      // <tr>\n      //     <td colSpan={3}>{this.state.errortext}</td>\n      // </tr>\n      // <tr>\n      //   <td className=\"firstField\"><label htmlFor=\"Username\">Tip Percent: </label></td><td className=\"firstField\"><input type=\"number\" className=\"Username\" onChange={this.handleChangeTip} /></td><td className=\"firstField\"><button onClick={this.handleTip}>Set</button> </td>\n      // </tr>\n      //           <tr>\n      //             <td className=\"leftBot\"></td>\n      //           </tr>\n\n      //         </td>\n      //         <td>\n      //         <div className=\"allTables\">\n      //           {Object.keys(this.state.groups).map((keyName, i) => (\n      //             <div>\n      //               {/* {console.log(\"INDEX: \",i, \" GROUP NAME: \",this.state.groups[keyName], \"WHATEVER KEY NAME IS: \",keyName)} */}\n      //               <table className=\"droppable\" onDragOver={(e) => this.onDragOver(e)} onDrop={(e) => this.onDrop(e, keyName)}>\n      //                 <thead>\n      //                   <tr><td><h1 className=\"groupName\">{this.state.groups[keyName].name}</h1></td></tr>\n      //                 </thead>\n      //                 <tbody>\n      //                   <tr></tr>\n      //                   {this.state.groups[keyName].theirOrders ?\n      //                     this.state.groups[keyName].theirOrders.map((eachOrder) => (\n      //                       <tr>\n      //                         <td>\n      //                           {eachOrder}\n      //                         </td>\n      //                       </tr>\n      //                     )\n      //                     )\n      //                     :\n      //                     \"\"\n      //                   }\n      //                   {/* {console.log(this.state.groups[keyName].totalCost,\" TOTAL COST SHOULD COME\")} */}\n      //                   {this.state.groups[keyName].totalCost !== undefined ? (\n      //                     <tr className=\"totalBar\">\n      //                       <td>\n      //                         Total: ${(this.state.groups[keyName].totalCost + ((this.state.groups[keyName].totalCost.toFixed(2) / (this.state.totalReceiptCost - this.state.totalReceiptTax)) * (this.state.totalReceiptTax))).toFixed(2)} (Tax: ${((this.state.groups[keyName].totalCost.toFixed(2) / (this.state.totalReceiptCost - this.state.totalReceiptTax)) * (this.state.totalReceiptTax)).toFixed(2)})\n      //                 <br></br>\n      //                         Total Tip: ${(this.state.groups[keyName].totalCost * (this.state.tipPercent / 100)).toFixed(2)}\n      //                       </td>\n      //                     </tr>\n      //                   )\n      //                     :\n      //                     \"\"\n      //                   }\n      //                 </tbody>\n      //               </table>\n      //             </div>\n      //           )\n      //           )}\n      //         </div>\n      //       </td>\n      //     </tr>\n      //   </tbody>\n      // </table>\n\n\n      //   <div>\n      //   </div>\n      // </div>\n      <div className=\"mainPage \">\n        <nav className=\"navbar navbar-fixed-top\">\n          <h1 className=\"header\">Rearrange Your Orders</h1>\n\n          <div className=\"ml-auto\">\n            {this.state.confirm ? <div>Are you sure you want to finalize these orders? <button className=\"final\" onClick={this.handleFinalize}>Yes</button><button className=\"finalno\"onClick={this.handleCancel}>No</button></div> : (<div><button className=\"finalize btn btn-danger\" onClick={this.handleConfirm}>Finalize</button><Link className=\"btn btn-danger\" to=\"/home\">Cancel</Link></div>)}\n            \n          </div>\n        </nav>\n\n        <div>\n          <table className=\"topPageTable\">\n            <thead >\n              <tr className=\"receiptHead\">\n                <td className=\"headText\">Total Cost: {this.state.totalReceiptCost} +(${(this.state.totalReceiptCost * ((this.state.tipPercent) / 100)).toFixed(2)} Tips)</td>\n                <td className=\"headText\">Current Tip Percent: {this.state.tipPercent}% </td>\n              </tr>\n            </thead>\n          </table>\n        </div>\n\n        <div className=\"botLeftCon d-flex flex-row\">\n          <div className=\"botLeftFunc d-flex flex-fill flex-column\">\n              <div className=\"align-self-center\">\n              <tr>\n                <td className=\"firstField\"><label htmlFor=\"Username\">Add User: </label></td><td className=\"firstField\"><input type=\"text\" className=\"Username\" onChange={this.handleChangeUsername} /></td><td className=\"firstField\"><button onClick={this.handleSubmit}>Add</button></td>\n              </tr>\n              <tr>\n                <td colSpan={3}>{this.state.errortext}</td>\n              </tr>\n              <tr>\n                <td className=\"firstField\"><label htmlFor=\"Username\">Tip Percent: </label></td><td className=\"firstField\"><input type=\"number\" className=\"Username\" onChange={this.handleChangeTip} /></td><td className=\"firstField\"><button onClick={this.handleTip}>Set</button> </td>\n              </tr>\n              </div>\n\n          </div>\n          <div className=\"d-flex flex-fill flex-column\">\n            <div className=\"allTables flex-row d-flex\">\n              {Object.keys(this.state.groups).map((keyName, i) => (\n                <div>\n                  <table className=\"droppable\" onDragOver={(e) => this.onDragOver(e)} onDrop={(e) => this.onDrop(e, keyName)}>\n                    <thead>\n                      <tr><td><h1 className=\"groupName\">{this.state.groups[keyName].name}</h1></td></tr>\n                    </thead>\n                    <tbody>\n                      <tr></tr>\n                      {this.state.groups[keyName].theirOrders ?\n                        this.state.groups[keyName].theirOrders.map((eachOrder) => (\n                          <tr>\n                            <td>\n                              {eachOrder}\n                            </td>\n                          </tr>\n                        )\n                        )\n                        :\n                        \"\"\n                      }\n                      {/* {console.log(this.state.groups[keyName].totalCost,\" TOTAL COST SHOULD COME\")} */}\n                      {this.state.groups[keyName].totalCost !== undefined ? (\n                        <tr className=\"totalBar\">\n                          <td>\n                            Total: ${(this.state.groups[keyName].totalCost + ((this.state.groups[keyName].totalCost.toFixed(2) / (this.state.totalReceiptCost - this.state.totalReceiptTax)) * (this.state.totalReceiptTax))).toFixed(2)} (Tax: ${((this.state.groups[keyName].totalCost.toFixed(2) / (this.state.totalReceiptCost - this.state.totalReceiptTax)) * (this.state.totalReceiptTax)).toFixed(2)})\n                        <br></br>\n                            Total Tip: ${(this.state.groups[keyName].totalCost * (this.state.tipPercent / 100)).toFixed(2)}\n                          </td>\n                        </tr>\n                      )\n                        :\n                        \"\"\n                      }\n                    </tbody>\n                  </table>\n                </div>\n              )\n              )}\n            </div>\n          </div>\n        </div>\n        <div>\n          <table className=\"topPageTable\">\n            <thead >\n              <tr className=\"receiptHead\">\n                <td className=\"headText\">Number of Users: {Object.keys(this.state.groups).length-2}</td>\n              </tr>\n            </thead>\n          </table>\n        </div>\n      </div >\n    );\n  }\n}\n\nexport default withRouter(AssignOrders);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './AccessDenied.css'\n\nclass AccessDenied extends Component {\n  render() {\n    return (\n      <div className=\"DeniedPage\">\n        <form onSubmit={this.handleSubmit} className=\"form\">\n          <table className='DeniedTable'>\n            <thead>\n              <tr><td colSpan={1}><h1 className=\"DeniedTitle\">Access Denied</h1></td></tr>\n            </thead>\n            <tbody >\n              <tr><td colSpan={1} className=\"DeniedDisplay\">You have attempted to access a page that you do not have access to. Please log in and try again, make an account it's free and easy, go register.</td></tr>\n              <tr><td colSpan={1} ><Link className=\"btn btn-danger\" to=\"/\">Go to LogIn</Link></td></tr>\n            </tbody>\n          </table>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default AccessDenied;","import React, { Component } from 'react';\nimport './App.css';\nimport { Redirect, BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {registerUserThunk} from \"./store/utilities/users\";\nimport {logInThunk, logOutThunk, me} from \"./store/utilities/loggeduser\";\nimport {fetchReceiptDataThunk, resetReceiptDataThunk} from \"./store/utilities/receiptdata\";\nimport {fetchOrdersDataThunk, resetOrdersDataThunk} from \"./store/utilities/orders\";\n\n//PAGE IMPORTS\nimport HomePage from './components/HomePage';\nimport LoginPage from './components/LoginPage';\nimport RegisterPage from './components/RegisterPage';\nimport AssignOrders from './components/AssignOrders';\nimport AccessDenied from './components/AccessDenied';\n\nclass RoutesView extends Component {\n\n  componentDidMount() {\n    this.props.me();\n  }\n\n  // addStudent = (student) => {\n  //   this.props.addStudent(student);\n  // }\n\n  render() {\n    const { isLoggedIn } = this.props;\n    console.log('RENDERING')\n    const HomeComponent = () => (<HomePage orders={this.props.orders} me={this.props.me} logOut={this.props.logOut} loggeduser={this.props.loggeduser} fetchReceiptData={this.props.fetchReceiptData} resetReceiptData={this.props.resetReceiptData} fetchOrdersData={this.props.fetchOrdersData} resetOrdersData={this.props.resetOrdersData} data={this.props.receiptdata}/>);\n    const LoginComponent = () => (<LoginPage logIn={this.props.logIn} isLoggedIn={this.props.isLoggedIn} error={this.props.error}/>);\n    const RegisterComponent = () => (<RegisterPage users={this.props.users} registerUser={this.props.registerUser} registerError={this.props.registerError} registerSuccess={this.props.registerSuccess}/>);\n    const AssignOrdersComponent = () => (<AssignOrders loggeduser={this.props.loggeduser} resetReceiptData={this.props.resetReceiptData} data={this.props.receiptdata}/>);\n    const DeniedComponent = () => (<AccessDenied />)\n    // const AllCampusesComponent = () => (<AllCampuses students={this.props.students} campuses={this.props.campuses} removeCampus={this.removeCampus} addCampus={this.addCampus} grabCampus={this.grabCampus}/>);\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" render={LoginComponent} />\n          <Route exact path=\"/login\" render={LoginComponent} />\n          <Route exact path=\"/register\" render={RegisterComponent} />\n          {isLoggedIn && (\n          <Switch>\n            <Route exact path=\"/home\" render={HomeComponent} />\n            <Route exact path=\"/orders\" render={AssignOrdersComponent} />\n          </Switch>\n          )}\n          <Route component={DeniedComponent} />\n          {/* <Route exact path=\"/allcampuses\" render={AllCampusesComponent}/> */}\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    users: state.users,\n    loggeduser: state.loggeduser,\n    error: state.loggeduser.response,\n    receiptdata: state.receiptdata,\n    registerSuccess: state.users.success,\n    registerError: state.users.response,\n    isLoggedIn: !!state.loggeduser.id,\n    orders: state.orders\n  }\n}\n\nconst mapDispatch = (dispatch) => {\n  return {\n    registerUser: (user) => dispatch(registerUserThunk(user)),\n    logIn: (user) => dispatch(logInThunk(user)),\n    logOut: () => dispatch(logOutThunk()),\n    fetchReceiptData: (filename) => dispatch(fetchReceiptDataThunk(filename)),\n    resetReceiptData: () => dispatch(resetReceiptDataThunk()),\n    me: () => dispatch(me()),\n    fetchOrdersData: (orders) => dispatch(fetchOrdersDataThunk(orders)),\n    resetOrdersData: () => dispatch(resetOrdersDataThunk())\n  }\n}\nexport default connect(mapState, mapDispatch)(RoutesView);","import axios from 'axios';\n// ACTION TYPES;\nconst FETCH_RECEIPT_DATA = \"FETCH_RECEIPT_DATA\";\nconst RESET_RECEIPT_DATA = \"RESET_RECEIPT_DATA\";\n\n// ACTION CREATOR;\nconst fetchReceiptData = (receiptdata) => {\n    return {\n        type: FETCH_RECEIPT_DATA,\n        payload: receiptdata\n    }\n}\n\nconst resetReceiptData = () => {\n  return {\n    type: RESET_RECEIPT_DATA,\n    payload: {}\n  }\n}\n\n// Thunks go here!\nexport const fetchReceiptDataThunk = (selectedFile) => (dispatch) => {\n    const data = new FormData() \n    data.append('file', selectedFile)\n\n    axios.post(\"https://api.taggun.io/api/receipt/v1/verbose/file\", data, { // receive two parameter endpoint url ,form data \n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"Accept\": \"application/json\",\n        \"apikey\": \"e6d1b110bdf511e98bfadfb7eb1aa8b5\"\n      }\n    })\n  .then(res => { // then print response status\n    dispatch(fetchReceiptData(res.data));\n    console.log(res.data);\n  })\n}\n\nexport const resetReceiptDataThunk = () => (dispatch) => {\n  let resolvedActionObject = resetReceiptData(); \n  dispatch(resolvedActionObject);\n}\n\n// REDUCER FUNCTION;\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case FETCH_RECEIPT_DATA:\n            return action.payload;\n        case RESET_RECEIPT_DATA:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport './App.css';\n// import RoutesContainer from \"./RoutesContainer\";\nimport RoutesView from './RoutesView'\n\nfunction App() {\n  return (\n    <div className =\"App\">\n      <header className=\"App-header\">\n        <RoutesView/>\n      </header>\n    </div>\n  )\n}\nexport default App;","\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  } else {\n    console.log(\"Can't Register to SW. Current env:\", process.env.NODE_ENV);\n  }\n}\n\n\nwindow.addEventListener('push', function(event) {\n  console.log('Push Notification received', event);\n\n  var data = {title: 'New!', content: 'Something new happened!'};\n\n  if (event.data) {\n    data = JSON.parse(event.data.text());\n  }\n\n  var options = {\n    body: data.content,\n    icon: '/src/icons/logo.png',\n    badge: '/src/icons/logo.png'\n  };\n\n  event.waitUntil(\n    window.registration.showNotification(data.title, options)\n  );\n});\n\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      console.log(\"SW is Registered!\");\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers, applyMiddleware, createStore } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\n//reducer functions\nimport users from \"./utilities/users\";\nimport loggeduser from \"./utilities/loggeduser\"\nimport receiptdata from \"./utilities/receiptdata\";\nimport orders from './utilities/orders'\n\nconst rootReducer = combineReducers({users, receiptdata, loggeduser, orders});\nconst logger = createLogger({ collapsed: true });\nconst middleware = composeWithDevTools(applyMiddleware(thunkMiddleware, logger));\nconst store = createStore(rootReducer, middleware);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}